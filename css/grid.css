html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    scroll-behavior: smooth;
}

*,
*::after,
*::before {
    box-sizing: inherit;
}

a[href="#top"] {
    margin: 1rem;
    display: block;
    font-size: 2rem;
    text-align: center;
    text-decoration: none;
}

p {
    margin: 0;
}

h2 {
    margin-top: 50vh;
    text-align: center;
}

img {
    margin: auto;
    display: block;
    max-width: 100%;
    height: auto;
}

.menu {
    margin-bottom: 100vh;
    font-size: 125%;
}

.menu li {
    margin-bottom: 1rem;
}

.container {
    margin: 0 auto;
    width: 80%;
    height: 80vh;
    background-color: #222;
    border: medium solid #000;
}

.item {
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
}

.sub-item {
    padding: 1rem;
    border: medium solid #ccc;
    background-color: #ddd;
}

/* Aqui inicia */
.grid-explicit {
    display: grid;
    grid-template-columns: 50% 100px 1fr;
    grid-template-rows: 2rem 20vh 30%;
    /*cuantas columnas, tamaño  */
    grid-template-columns: repeat(5, 20%);
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 25%);
    grid-template-rows: repeat(4, auto);

    grid-template-columns: 20% 30% 30% 20%;
    grid-template-columns: 20% repeat(2, 30%) 20%;
    grid-template-rows: repeat(5, auto);

    /* Espacio entre contenedores */
    /* filas(row) columnas(column) */
    grid-gap: 100px 0;
    gap: 5px 10px;
    gap: 1vh 1vw;
    gap: 0 0;
}

.grid-explicit .item:nth-child(10) {
    color: cyan;

    grid-row-start: 2;
    grid-row-start: 3;
    grid-column-start: 2;
    grid-column-end: 3;
    /* atajo de start y end */
    grid-row: 2 / 3;
    grid-column: 3 / 4;
    /*     combinar celdas */
    grid-column: 3 / 5;

    /*shortCut: grid-row-start/grid-row-end/grid-column-start/grid-column-end   */
    grid-area: 2/3/3/5;
}

.grid-explicit .item:nth-child(12) {
    color: cyan;
    grid-row: span 2;
    grid-column: span 3;
}


.grid-explicit .item:nth-child(15) {
    color: cyan;
    grid-row: 1/ span 2;
    grid-column: 1 / span 2;
}


.grid-line-names {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
    grid-template-rows: [linea-r1] auto [linea-r2] auto [linea-r3] auto [linea-r4];
}

.grid-line-names .item:nth-child(3) {
    color: cyan;
    grid-row: linea-r3 / linea-r4;
    grid-column: linea-c1 / linea-c4;
}


.grid-areas {
    display: grid;
    grid-template-columns: 1fr 200px;
    grid-template-rows: 100px repeat(2, 1fr) 60px;
    grid-template-areas:
        "header header"
        "content sidebar"
        "content ."
        "footer footer";
}

.header {
    grid-area: header;
}

.content {
    grid-area: content;
}

.sidebar {
    grid-area: sidebar;
}

.footer {
    grid-area: footer;
}

.grid-implicit {
    width: 40%;
    display: inline-grid;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 200px);
}

.grid-flow {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(3, 150px);
    grid-auto-flow: row;

    /*Es la medida de los elementos que se pasan del grid que se especifica es decir los sobrantes  */
    grid-auto-rows: 100px;

    grid-auto-flow: column;
    grid-auto-columns: 50px;
}



.grid-flow-dense {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 150px);
    grid-auto-flow: row dense;
    grid-auto-flow: column dense;
}






/* .grid-flow-dense .item:nth-child(9) {
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
} */
.grid-flow-dense .item:nth-child(11) {
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
}



.grid-layers {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
}

.grid-layers .item:nth-child(1) {
    background-color: yellow;
    grid-row: 1/3;
    grid-column: 1/3;
}

.grid-layers .item:nth-child(2) {
    background-color: blue;
    grid-row: 1/3;
    grid-column: 3/5;
}

.grid-layers .item:nth-child(3) {
    background-color: greenyellow;
    grid-row: 3/5;
    grid-column: 1/3;
}

.grid-layers .item:nth-child(4) {
    background-color: orange;
    grid-row: 3/5;
    grid-column: 3/5;
}

.grid-layers .item:nth-child(5) {
    background-color: cyan;
    grid-row: 2/4;
    grid-column: 2/4;
}

.grid-order {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

.grid-order .item:nth-child(1) {
    order: 1;
}

.grid-order .item:nth-child(2) {
    order: -1;
}


.grid-align {
    display: grid;
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 1fr);
    /*Alinea en el eje x   */
    justify-items: stretch;
    justify-items: start;
    justify-items: center;
    /*Alinea en el eje Y   */
    align-items: start;
    align-items: stretch;
    align-items: center;
}

.grid-align .item:nth-child(4) {
    /* Alinea solo este elemento */
    justify-self: start;
    align-self: start;
}

.grid-align-tracks {
    display: grid;
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);
    /* Alinea los tracks de la grid en el eje horizontal */
    justify-content: center;
    justify-content: space-between;
    justify-content: space-evenly;
    /* Alinea los tracks de la grid en el eje vertical */
    align-content: center;
    align-content: space-evenly;
    align-content: end;
}

.grid-min-max {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-columns: repeat(4, minmax(100px, 400px));
    grid-template-columns: repeat(minmax(min-content, 400px), 4);
    grid-template-columns: repeat(4, minmax(min-content, 400px));
    grid-template-columns: repeat(4, minmax(min-content, max-content));
    /* Especifica el tamaño verticalmente */
    /* grid-auto-rows: 100px; */
}

.grid-repeat {
    display: grid;
    /* Le estas diciendo que se repitan 4 veveces los 4 items */
    grid-template-columns: repeat(4, 1fr);
    grid-template-columns: repeat(1, 10% 20% 30% 40%);
    grid-template-rows: repeat(2, 100px 200px);
    /*Se define el tamaño de los elementos que no se contemplaban por decir   */
    grid-auto-rows: 150px;
}

.grid-dynamics {
    display: grid;
    grid-template-columns: repeat(4, 100px);
    /* auto fill rellena la grid con tracks generados dinamicamente */
    grid-template-columns: repeat(auto-fill, 100px);

    /* auto ffit ajusta la grid con los tracks existentes*/
    grid-template-columns: repeat(auto-fit, 100px);

    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}


.grid-responsive {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.grid-nested {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
}

.grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
}

.subgrid {
    /* Para que funcione el subgrid se neceesita hacer lo siguiente:display:
    1)definir grid-column y grid-row 
    2) aplicar display grid
    3)aplicar subgrid a las columnas a las filas o ambas*/
    grid-column: span 3;
    grid-row: 1 / 3;
    display: grid;
    grid-template-columns: subgrid;
    grid-template-rows: subgrid;
}